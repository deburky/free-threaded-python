[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "freethreaded-python-tests"
version = "1.0.0"
description = "Test suite for validating free-threaded Python performance claims"
authors = [
    {name = "Free-Threading Performance Analysis"},
]
readme = "README.md"
requires-python = ">=3.14"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.14",
]
dependencies = [
    "numpy>=1.24.0,<3.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0,<1.7.1",
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0.0",
    "woeboost>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.0.0",
]
woeboost = [
    "woeboost>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/your-username/freethreaded-python-tests"
Documentation = "https://github.com/your-username/freethreaded-python-tests#readme"
Repository = "https://github.com/your-username/freethreaded-python-tests.git"
Issues = "https://github.com/your-username/freethreaded-python-tests/issues"

[project.scripts]
test-orchestrator = "tests.test_orchestrator:main"

[tool.ruff]
# Exclude files
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

# Line length to match formatter
line-length = 88

# Python version for rules
target-version = "py39"

[tool.ruff.lint]
# Enable additional rules
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

# Ignore specific rules
ignore = [
    "E501",  # Line too long (handled by formatter)
    "B008",  # Do not perform function calls in argument defaults
    "C901",  # Too complex (let's be pragmatic)
]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# End files with newline
skip-magic-trailing-comma = false

# Line length
line-ending = "auto"

[tool.uv.workspace]
members = ["test-project"]

[tool.ruff.lint.isort]
# Import sorting configuration
known-first-party = ["freethreaded_tests"]
force-single-line = false
force-sort-within-sections = false
single-line-exclusions = ["typing"]

[tool.ruff.lint.mccabe]
# Complexity threshold
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
# Allow certain violations in specific files
"test_*.py" = ["F401", "F811"]  # Allow unused imports in tests
"demo.py" = ["T201"]  # Allow print statements in demo
"*_benchmark.py" = ["T201"]  # Allow print statements in benchmarks
